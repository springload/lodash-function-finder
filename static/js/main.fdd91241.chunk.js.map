{"version":3,"sources":["lodashMatches.tsx","Editor.tsx","constants.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["removeJSON5","str","replace","input","output","inputJSString","outputJSONString","inputArgs","inputError","outputError","outputValue","eval","e","toString","JSON5","parse","matchingFns","outputObjString","stringify","fns","Object","keys","lodash","filter","fn","lodashFn","inputValue","cloneDeep","includes","Array","isArray","length","actualOutputObj","Editor","value","handleValueChanged","prefix","suffix","error","refSpan","useRef","className","onClick","current","focus","ref","rows","Math","floor","cols","clamp","onChange","newValue","target","aria-live","examples","lodashFns","fnName","App","useState","setInput","setOutput","setInputError","setOutputError","lodashFunctions","setLodashFunctions","useEffect","response","lodashMatches","handleInputChanged","useCallback","handleOutputChanged","handleExampleChanged","newInput","newOutput","index","random","href","rel","src","alt","map","arr","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4pBA2EA,SAASA,YAAYC,GACnB,OAAOA,EAAIC,QAAQ,YAAa,IAzEnB,+BAASC,MAAeC,QACrC,IAAMC,cAAa,WAAOF,MAAP,KACbG,iBAAgB,UAAMF,QACxBG,UAAmB,GACnBC,WAAa,KACbC,YAAc,KAQdC,YAPJ,IAEEH,UAAYI,KAAKN,eACjB,MAAOO,GACPJ,WAAU,2BAAuBI,EAAEC,YAIrC,IACEH,YAAcI,6CAAMC,MAAMT,kBAC1B,MAAOM,GACPH,YAAW,2BAAuBT,YAAYY,EAAEC,aAGlD,GAAIL,YAAcC,YAChB,MAAO,CACLO,YAAa,GACbR,sBACAC,yBAGJ,IAAMQ,gBAAkBH,6CAAMI,UAAUR,aAElCS,IAAMC,OAAOC,KAAKC,+CAClBN,YAAcG,IAAII,QAAO,SAAAC,GAE7B,IAAMC,EAAWH,8CAAOE,GACxB,GAAwB,oBAAbC,EACT,OAAO,EAET,IAAMC,EAAaJ,8CAAOK,UAAUpB,WAEpC,GAIE,CAAC,OAAOqB,SAASJ,IACjBK,MAAMC,QAAQJ,IACdG,MAAMC,QAAQpB,cACdgB,EAAWK,SAAWrB,YAAYqB,OAElC,OAAO,EAGT,IACE,IAAMC,EAAkBP,EAAQ,WAAR,yJAAYC,IAEpC,OAD8BZ,6CAAMI,UAAUc,KACbf,gBACjC,MAAOL,GAEP,OAAO,MAGX,MAAO,CACLI,wBACAR,WAAY,KACZC,YAAa,Q,sMCXFwB,G,kBAxCA,SAAC,GAMF,IALZC,EAKW,EALXA,MACAC,EAIW,EAJXA,mBACAC,EAGW,EAHXA,OACAC,EAEW,EAFXA,OACAC,EACW,EADXA,MAEMC,EAAUC,iBAAO,MAEvB,OACE,yBACEC,UAAU,SACVC,QAAS,SAAA9B,GACF2B,GAAYA,EAAQI,SACzBJ,EAAQI,QAAQC,UAGjBR,GAAkB,GACnB,8BACEK,UAAU,mBACVI,IAAKN,EACLL,MAAOA,EACPY,KAAMC,KAAKC,MAAMd,EAAMH,OAxBf,IAwBmC,EAC3CkB,KAAMC,gBAAMhB,EAAMH,OAAQ,EAzBlB,IA0BRoB,SAAU,SAAAvC,GACR,GAAK2B,GAAYA,EAAQI,QAAzB,CACA,IAAMS,EAAWxC,EAAEyC,OAAOnB,MAC1BC,EAAmBiB,OAGtBf,GAAkB,GAClBC,EACC,yBAAKgB,YAAU,SAASb,UAAU,iBAC/BH,GAED,Q,OCsDKiB,EAvGE,CACf,CACEpD,MAAM,gBACNC,OAAO,iBAET,CACED,MAAM,yBACNC,OAAO,4BAET,CACED,MAAM,uBACNC,OAAO,WAET,CACED,MAAM,oCACNC,OAAO,qCAET,CACED,MAAM,6CACNC,OAAO,KAET,CACED,MAAM,uBACNC,OAAO,UAET,CACED,MAAM,4CACNC,OAAO,4BAET,CACED,MAAM,0BACNC,OAAO,4BAET,CACED,MAAM,0BACNC,OAAO,aAET,CACED,MAAM,qBACNC,OAAO,kBAET,CACED,MAAM,eACNC,OAAO,OAET,CACED,MAAM,iBACNC,OAAO,mBAET,CACED,MAAM,wBACNC,OAAO,uBAET,CACED,MAAM,uBACNC,OAAO,sBAET,CACED,MAAM,YACNC,OAAO,KAET,CACED,MAAM,qBACNC,OAAO,KAET,CACED,MAAM,YACNC,OAAO,UAET,CACED,MAAM,kBACNC,OAAO,KAET,CACED,MAAM,0BACNC,OAAO,OAET,CACED,MAAM,sHACNC,OAAO,SAET,CACED,MAAM,2BACNC,OAAO,4BAET,CACED,MAAM,YACNC,OAAO,QAET,CACED,MAAM,OACNC,OAAO,QAET,CACED,MAAM,aACNC,OAAO,MAET,CACED,MAAM,2BACNC,OAAO,SCiDLoD,EAAYpC,OAAOC,KAAKC,KAAQC,QAAO,SAAAkC,GAG3C,MAA2B,oBADVnC,IAAOmC,MAIXC,EAlJO,WAAM,MAQAC,mBAAiBJ,EAAS,GAAGpD,OAR7B,mBAQnBA,EARmB,KAQZyD,EARY,OASED,mBAAiBJ,EAAS,GAAGnD,QAT/B,mBASnBA,EATmB,KASXyD,EATW,OAUUF,mBAAiB,MAV3B,mBAUnBnD,EAVmB,KAUPsD,EAVO,OAWYH,mBAAiB,MAX7B,mBAWnBlD,EAXmB,KAWNsD,EAXM,OAaoBJ,mBAAmB,IAbvC,mBAanBK,EAbmB,KAaFC,EAbE,KAe1BC,qBAAU,WACR,IAAMC,EAAWC,YAAcjE,EAAOC,GACtC6D,EAAmBE,EAASnD,aAC5B8C,EAAcK,EAAS3D,YACvBuD,EAAeI,EAAS1D,eACvB,CAACN,EAAOC,EAAQ6D,EAAoBH,EAAeC,IAEtD,IAAMM,EAAqBC,uBACzB,SAACnE,GACCyD,EAASzD,KAEX,CAACyD,IAGGW,EAAsBD,uBAC1B,SAAClE,GACCyD,EAAUzD,KAEZ,CAACyD,IAGGW,EAAuBF,uBAAY,WAGvC,IAFA,IAAIG,EAAWtE,EACXuE,EAAYtE,EACTD,IAAUsE,GAAYrE,IAAWsE,GAAW,CACjD,IAAMC,EAAQ5B,KAAKC,MAAMD,KAAK6B,SAAWrB,EAASxB,QAClD0C,EAAWlB,EAASoB,GAAOxE,MAC3BuE,EAAYnB,EAASoB,GAAOvE,OAE9BwD,EAASa,GACTZ,EAAUa,KACT,CAACvE,EAAOC,EAAQwD,EAAUC,IAE7B,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,UACb,uBACEoC,KAAK,4BACLxB,OAAO,SACPyB,IAAI,uBAEJ,yBACErC,UAAU,cACVsC,IAAI,iBACJC,IAAI,0DAIV,yBAAKvC,UAAU,QACb,sDACA,+CACoBe,EAAUzB,OAD9B,2DAIA,wDAC4B,uCAD5B,QACmD,wCAAoB,IADvE,OAEM,qDAFN,+CAKA,mCACQ,IACN,4BAAQW,QAAS8B,EAAsB/B,UAAU,kBAAjD,kBAEU,IAJZ,uCAOA,yBAAKA,UAAU,OACb,qCACA,kBAAC,EAAD,CACEP,MAAO/B,EACPgC,mBAAoBkC,EACpBjC,OAAO,sBACPC,OAAO,KACPC,MAAO9B,IAET,sCACA,kBAAC,EAAD,CACE0B,MAAO9B,EACP+B,mBAAoBoC,EACpBjC,MAAO7B,IAET,yDACCuD,EAAgBjC,OAAS,EACxB,yBAAKuB,YAAU,UAAf,SACSU,EAAgBjC,OADzB,SAEGiC,EAAgBjC,OAAS,EAAI,MAAQ,IAFxC,yBAGyB,IACtBiC,EAAgBiB,KAAI,SAACzD,EAAImD,EAAOO,GAAZ,OACnB,kBAAC,WAAD,KACE,uBACEL,KAAI,mCAA8BrD,GAClC2D,IAAK3D,EACL6B,OAAO,SACPyB,IAAI,uBAEHtD,GAEFmD,EAAQO,EAAInD,OAAS,EAAI,KAAO,QAEjC,KAGN,mCAIJ,2BACE,oCADF,wCAGA,oDACoB,IAClB,uBACE8C,KAAK,4BACLxB,OAAO,SACPyB,IAAI,uBAHN,cAFF,iDCxHYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.fdd91241.chunk.js","sourcesContent":["import lodash from \"lodash\";\nimport JSON5 from \"json5\";\n\nexport default function(input: string, output: string): LodashFnsResponse {\n  const inputJSString = `[${input}]`;\n  const outputJSONString = `${output}`;\n  let inputArgs: any[] = [];\n  let inputError = null;\n  let outputError = null;\n  try {\n    // eslint-disable-next-line no-eval\n    inputArgs = eval(inputJSString);\n  } catch (e) {\n    inputError = `Problem parsing: ${e.toString()}`;\n  }\n\n  let outputValue: any;\n  try {\n    outputValue = JSON5.parse(outputJSONString);\n  } catch (e) {\n    outputError = `Problem parsing: ${removeJSON5(e.toString())}`;\n  }\n\n  if (inputError || outputError) {\n    return {\n      matchingFns: [],\n      inputError,\n      outputError\n    };\n  }\n  const outputObjString = JSON5.stringify(outputValue);\n\n  const fns = Object.keys(lodash);\n  const matchingFns = fns.filter(fn => {\n    // @ts-ignore\n    const lodashFn = lodash[fn];\n    if (typeof lodashFn !== \"function\") {\n      return false;\n    }\n    const inputValue = lodash.cloneDeep(inputArgs);\n\n    if (\n      // special case for 'map'-like functions\n      // if both arrays and same length a map\n      // could return this data\n      [\"map\"].includes(fn) &&\n      Array.isArray(inputValue) &&\n      Array.isArray(outputValue) &&\n      inputValue.length === outputValue.length\n    ) {\n      return true;\n    }\n\n    try {\n      const actualOutputObj = lodashFn(...inputValue);\n      const actualOutputObjString = JSON5.stringify(actualOutputObj);\n      return actualOutputObjString === outputObjString;\n    } catch (e) {\n      // ignore error\n      return false;\n    }\n  });\n  return {\n    matchingFns,\n    inputError: null,\n    outputError: null\n  };\n}\n\ntype LodashFnsResponse = {\n  matchingFns: string[];\n  inputError: null | string;\n  outputError: null | string;\n};\n\nfunction removeJSON5(str: string): string {\n  return str.replace(/JSON5:?/gi, \"\");\n}\n","import React, { useRef } from \"react\";\nimport { clamp } from \"lodash\";\nimport \"./Editor.css\";\n\ntype Props = {\n  value: string;\n  handleValueChanged: Function;\n  prefix?: string;\n  suffix?: string;\n  error?: string;\n};\n\nconst WRAP_AT = 40;\n\nconst Editor = ({\n  value,\n  handleValueChanged,\n  prefix,\n  suffix,\n  error\n}: Props) => {\n  const refSpan = useRef(null);\n\n  return (\n    <div\n      className=\"editor\"\n      onClick={e => {\n        if (!refSpan || !refSpan.current) return;\n        refSpan.current.focus();\n      }}\n    >\n      {prefix ? prefix : \"\"}\n      <textarea\n        className=\"editor__textarea\"\n        ref={refSpan}\n        value={value}\n        rows={Math.floor(value.length / WRAP_AT) + 1}\n        cols={clamp(value.length, 1, WRAP_AT)}\n        onChange={e => {\n          if (!refSpan || !refSpan.current) return;\n          const newValue = e.target.value;\n          handleValueChanged(newValue);\n        }}\n      />\n      {suffix ? suffix : \"\"}\n      {error ? (\n        <div aria-live=\"polite\" className=\"editor__error\">\n          {error}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Editor;\n","const examples = [\n  {\n    input: `\"new zealand\"`,\n    output: `\"New Zealand\"`\n  },\n  {\n    input: `[\"a\", \"b\"], [\"y\", \"z\"]`,\n    output: `[[\"a\", \"y\"], [\"b\", \"z\"]]`\n  },\n  {\n    input: `[\"a\", \"b\", \"c\"], \"~\"`,\n    output: `\"a~b~c\"`\n  },\n  {\n    input: `[\"a\", \"b\"], [1, 2], [true, false]`,\n    output: `[[\"a\", 1, true], [\"b\", 2, false]]`\n  },\n  {\n    input: `{ \"a\": [{ \"b\": { \"c\": 3 } }] }, \"a[0].b.c\"`,\n    output: `3`\n  },\n  {\n    input: `[2, 1, 3, 4], [2, 3]`,\n    output: `[1, 4]`\n  },\n  {\n    input: `[{ \"x\": 1 }, { \"x\": 2 }, { \"x\": 1 }], \"x\"`,\n    output: `[{ \"x\": 1 }, { \"x\": 2 }]`\n  },\n  {\n    input: `[\"a\", \"b\", \"c\", \"d\"], 2`,\n    output: `[[\"a\", \"b\"], [\"c\", \"d\"]]`\n  },\n  {\n    input: `[0, 1, false, 2, \"\", 3]`,\n    output: `[1, 2, 3]`\n  },\n  {\n    input: `[1], 2, [3], [[4]]`,\n    output: `[1, 2, 3, [4]]`\n  },\n  {\n    input: `[1, 2, 3], 2`,\n    output: `[3]`\n  },\n  {\n    input: `[1, 2, 3], \"a\"`,\n    output: `[\"a\", \"a\", \"a\"]`\n  },\n  {\n    input: `[1, [2, [3, [4]], 5]]`,\n    output: `[1, 2, [3, [4]], 5]`\n  },\n  {\n    input: `[[\"a\", 1], [\"b\", 2]]`,\n    output: `{ \"a\": 1, \"b\": 2 }`\n  },\n  {\n    input: `[1, 2, 3]`,\n    output: `1`\n  },\n  {\n    input: `[1, 2, 1, 2], 2, 2`,\n    output: `3`\n  },\n  {\n    input: `[1, 2, 3]`,\n    output: `[1, 2]`\n  },\n  {\n    input: `[1, 2, 1, 2], 2`,\n    output: `3`\n  },\n  {\n    input: `[\"a\", \"b\", \"c\", \"d\"], 2`,\n    output: `\"c\"`\n  },\n  {\n    input: `[{ \"user\": \"barney\", \"active\": false }, { \"user\": \"fred\", \"active\": false }], { \"user\": \"barney\", \"active\": false }`,\n    output: `false`\n  },\n  {\n    input: `[{ \"a\": 1 }, { \"b\": 2 }]`,\n    output: `[{ \"a\": 1 }, { \"b\": 2 }]`\n  },\n  {\n    input: `[1, 2, 3]`,\n    output: `true`\n  },\n  {\n    input: `3, 1`,\n    output: `true`\n  },\n  {\n    input: `-10, -5, 5`,\n    output: `-5`\n  },\n  {\n    input: `{ \"a\": { \"b\": 2 } }, \"a\"`,\n    output: `true`\n  }\n];\n\nexport default examples;\n","import React, { useState, useCallback, Fragment, useEffect } from \"react\";\nimport lodash from \"lodash\";\nimport \"what-input\";\nimport \"./App.css\";\nimport Editor from \"./Editor\";\nimport lodashMatches from \"./lodashMatches\";\nimport examples from \"./constants\";\n\nconst App: React.FC = () => {\n  /*\n   * Developer note\n   *\n   * Never allow the input to come from the URL (ie, in hashstate or something)\n   * because we're eval()ing the contents and people shouldn't be able to link to\n   * javascript that executes on our domain.\n   */\n  const [input, setInput] = useState<string>(examples[0].input);\n  const [output, setOutput] = useState<string>(examples[0].output);\n  const [inputError, setInputError] = useState<string>(null);\n  const [outputError, setOutputError] = useState<string>(null);\n\n  const [lodashFunctions, setLodashFunctions] = useState<string[]>([]);\n\n  useEffect(() => {\n    const response = lodashMatches(input, output);\n    setLodashFunctions(response.matchingFns);\n    setInputError(response.inputError);\n    setOutputError(response.outputError);\n  }, [input, output, setLodashFunctions, setInputError, setOutputError]);\n\n  const handleInputChanged = useCallback(\n    (input: string) => {\n      setInput(input);\n    },\n    [setInput]\n  );\n\n  const handleOutputChanged = useCallback(\n    (output: string) => {\n      setOutput(output);\n    },\n    [setOutput]\n  );\n\n  const handleExampleChanged = useCallback(() => {\n    let newInput = input;\n    let newOutput = output;\n    while (input === newInput && output === newOutput) {\n      const index = Math.floor(Math.random() * examples.length);\n      newInput = examples[index].input;\n      newOutput = examples[index].output;\n    }\n    setInput(newInput);\n    setOutput(newOutput);\n  }, [input, output, setInput, setOutput]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <a\n          href=\"https://springload.co.nz/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"header-logo\"\n            src=\"springload.svg\"\n            alt=\"Springload: a web development agency in New Zealand\"\n          />\n        </a>\n      </div>\n      <div className=\"main\">\n        <h1>Lodash Function Finder</h1>\n        <p>\n          Lodash has about {lodashFns.length} functions and it can be hard to\n          find the one you want.\n        </p>\n        <p>\n          Instead type the expected <code>input</code> and <code>output</code>{\" \"}\n          and <b>Lodash Function Finder</b> will show any Lodash functions that\n          match.\n        </p>\n        <p>\n          Try a{\" \"}\n          <button onClick={handleExampleChanged} className=\"example-button\">\n            Random Example\n          </button>{\" \"}\n          or just type your own input/output.\n        </p>\n        <div className=\"lff\">\n          <h2>Input</h2>\n          <Editor\n            value={input}\n            handleValueChanged={handleInputChanged}\n            prefix=\"someLodashFunction(\"\n            suffix=\");\"\n            error={inputError}\n          />\n          <h2>Output</h2>\n          <Editor\n            value={output}\n            handleValueChanged={handleOutputChanged}\n            error={outputError}\n          />\n          <h2>Matching Lodash Functions</h2>\n          {lodashFunctions.length > 0 ? (\n            <div aria-live=\"polite\">\n              Found {lodashFunctions.length} match\n              {lodashFunctions.length > 1 ? \"es \" : \" \"}\n              for that input+output:{\" \"}\n              {lodashFunctions.map((fn, index, arr) => (\n                <Fragment>\n                  <a\n                    href={`https://lodash.com/docs/#${fn}`}\n                    key={fn}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {fn}\n                  </a>\n                  {index < arr.length - 1 ? \", \" : \".\"}\n                </Fragment>\n              ))}{\" \"}\n            </div>\n          ) : (\n            \"No matching lodash functions :(\"\n          )}\n        </div>\n\n        <p>\n          <i>Note:</i> The output can't include functions.\n        </p>\n        <footer>\n          Brought to you by{\" \"}\n          <a\n            href=\"https://springload.co.nz/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Springload\n          </a>\n          , a web development agency in New Zealand.\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nconst lodashFns = Object.keys(lodash).filter(fnName => {\n  // @ts-ignore\n  const lodashFn = lodash[fnName];\n  return typeof lodashFn === \"function\";\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}